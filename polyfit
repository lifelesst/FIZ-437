#!/usr/bin/env python
# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np
import random
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import Ridge


def f(x):
    return np.sin(2 * np.pi * x) + random.gauss(0, 0.05)

def fit(sample_size):
    x = np.sort(np.random.random(sample_size))
    y = f(x)
    
    X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)
    X_train = X_train.reshape(-1,1)
    x_test = np.linspace(0, 1 , num = 100).reshape(-1, 1)
    polyreg = make_pipeline(PolynomialFeatures(10), Ridge(alpha = 0.001))
    polyreg.fit(X_train, y_train)
    plot = polyreg.predict(x_test)
    
    sns.set_theme()
    plt.plot(x, y, label="ground truth", color = "green")
    plt.scatter(X_train, y_train, label="data", s = 5)   
    plt.plot(x_test, plot, label="fit", color = "red")
    plt.legend()
    plt.show()
    return

def main():
    sample_sizes = [5, 10, 20, 50, 100, 1000]
    for i in sample_sizes:
        fit(i)
if __name__ == '__main__':
    main()
